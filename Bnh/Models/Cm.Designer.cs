//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("bnhModel", "FK_Brick_Wall", "Wall", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bnh.Models.Wall), "Brick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bnh.Models.Brick), true)]

#endregion

namespace Bnh.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CmEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CmEntities object using the connection string found in the 'CmEntities' section of the application configuration file.
        /// </summary>
        public CmEntities() : base("name=CmEntities", "CmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CmEntities object.
        /// </summary>
        public CmEntities(string connectionString) : base(connectionString, "CmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CmEntities object.
        /// </summary>
        public CmEntities(EntityConnection connection) : base(connection, "CmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brick> Bricks
        {
            get
            {
                if ((_Bricks == null))
                {
                    _Bricks = base.CreateObjectSet<Brick>("Bricks");
                }
                return _Bricks;
            }
        }
        private ObjectSet<Brick> _Bricks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wall> Walls
        {
            get
            {
                if ((_Walls == null))
                {
                    _Walls = base.CreateObjectSet<Wall>("Walls");
                }
                return _Walls;
            }
        }
        private ObjectSet<Wall> _Walls;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bricks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBricks(Brick brick)
        {
            base.AddObject("Bricks", brick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Walls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWalls(Wall wall)
        {
            base.AddObject("Walls", wall);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="Brick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(HtmlBrick))]
    [KnownTypeAttribute(typeof(MapBrick))]
    [KnownTypeAttribute(typeof(PictureBrick))]
    [KnownTypeAttribute(typeof(GalleryBrick))]
    public partial class Brick : EntityObject
    {
        #region Factory Method

        public Brick()
        {
        }
    
        /// <summary>
        /// Create a new Brick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wallId">Initial value of the WallId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Brick CreateBrick(global::System.Int64 id, global::System.Int64 wallId, global::System.Int32 x, global::System.Int32 y, global::System.Int32 width, global::System.String title)
        {
            Brick brick = new Brick();
            brick.Id = id;
            brick.WallId = wallId;
            brick.X = x;
            brick.Y = y;
            brick.Width = width;
            brick.Title = title;
            return brick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WallId
        {
            get
            {
                return _WallId;
            }
            set
            {
                OnWallIdChanging(value);
                ReportPropertyChanging("WallId");
                _WallId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WallId");
                OnWallIdChanged();
            }
        }
        private global::System.Int64 _WallId;
        partial void OnWallIdChanging(global::System.Int64 value);
        partial void OnWallIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Int32 _X;
        partial void OnXChanging(global::System.Int32 value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Int32 _Y;
        partial void OnYChanging(global::System.Int32 value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bnhModel", "FK_Brick_Wall", "Wall")]
        public Wall Wall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wall>("bnhModel.FK_Brick_Wall", "Wall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wall>("bnhModel.FK_Brick_Wall", "Wall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wall> WallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wall>("bnhModel.FK_Brick_Wall", "Wall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wall>("bnhModel.FK_Brick_Wall", "Wall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="GalleryBrick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GalleryBrick : Brick
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GalleryBrick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wallId">Initial value of the WallId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static GalleryBrick CreateGalleryBrick(global::System.Int64 id, global::System.Int64 wallId, global::System.Int32 x, global::System.Int32 y, global::System.Int32 width, global::System.String title)
        {
            GalleryBrick galleryBrick = new GalleryBrick();
            galleryBrick.Id = id;
            galleryBrick.WallId = wallId;
            galleryBrick.X = x;
            galleryBrick.Y = y;
            galleryBrick.Width = width;
            galleryBrick.Title = title;
            return galleryBrick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicturesUrl
        {
            get
            {
                return _PicturesUrl;
            }
            set
            {
                OnPicturesUrlChanging(value);
                ReportPropertyChanging("PicturesUrl");
                _PicturesUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicturesUrl");
                OnPicturesUrlChanged();
            }
        }
        private global::System.String _PicturesUrl;
        partial void OnPicturesUrlChanging(global::System.String value);
        partial void OnPicturesUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="HtmlBrick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HtmlBrick : Brick
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HtmlBrick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wallId">Initial value of the WallId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static HtmlBrick CreateHtmlBrick(global::System.Int64 id, global::System.Int64 wallId, global::System.Int32 x, global::System.Int32 y, global::System.Int32 width, global::System.String title)
        {
            HtmlBrick htmlBrick = new HtmlBrick();
            htmlBrick.Id = id;
            htmlBrick.WallId = wallId;
            htmlBrick.X = x;
            htmlBrick.Y = y;
            htmlBrick.Width = width;
            htmlBrick.Title = title;
            return htmlBrick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="MapBrick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MapBrick : Brick
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MapBrick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wallId">Initial value of the WallId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static MapBrick CreateMapBrick(global::System.Int64 id, global::System.Int64 wallId, global::System.Int32 x, global::System.Int32 y, global::System.Int32 width, global::System.String title)
        {
            MapBrick mapBrick = new MapBrick();
            mapBrick.Id = id;
            mapBrick.WallId = wallId;
            mapBrick.X = x;
            mapBrick.Y = y;
            mapBrick.Width = width;
            mapBrick.Title = title;
            return mapBrick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GpsLocation
        {
            get
            {
                return _GpsLocation;
            }
            set
            {
                OnGpsLocationChanging(value);
                ReportPropertyChanging("GpsLocation");
                _GpsLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GpsLocation");
                OnGpsLocationChanged();
            }
        }
        private global::System.String _GpsLocation;
        partial void OnGpsLocationChanging(global::System.String value);
        partial void OnGpsLocationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="PictureBrick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PictureBrick : Brick
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PictureBrick object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="wallId">Initial value of the WallId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static PictureBrick CreatePictureBrick(global::System.Int64 id, global::System.Int64 wallId, global::System.Int32 x, global::System.Int32 y, global::System.Int32 width, global::System.String title)
        {
            PictureBrick pictureBrick = new PictureBrick();
            pictureBrick.Id = id;
            pictureBrick.WallId = wallId;
            pictureBrick.X = x;
            pictureBrick.Y = y;
            pictureBrick.Width = width;
            pictureBrick.Title = title;
            return pictureBrick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bnhModel", Name="Wall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wall object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Wall CreateWall(global::System.Int64 id, global::System.Guid ownerId, global::System.String title)
        {
            Wall wall = new Wall();
            wall.Id = id;
            wall.OwnerId = ownerId;
            wall.Title = title;
            return wall;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Guid _OwnerId;
        partial void OnOwnerIdChanging(global::System.Guid value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bnhModel", "FK_Brick_Wall", "Brick")]
        public EntityCollection<Brick> Bricks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brick>("bnhModel.FK_Brick_Wall", "Brick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brick>("bnhModel.FK_Brick_Wall", "Brick", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
