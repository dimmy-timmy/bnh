//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BlModel", "FK_community_TO_city", "city", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bnh.Models.city), "community", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bnh.Models.community), true)]
[assembly: EdmRelationshipAttribute("BlModel", "community_builders", "builder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bnh.Models.builder), "community", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bnh.Models.community))]

#endregion

namespace Bnh.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BlEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BlEntities object using the connection string found in the 'BlEntities' section of the application configuration file.
        /// </summary>
        public BlEntities() : base("name=BlEntities", "BlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlEntities object.
        /// </summary>
        public BlEntities(string connectionString) : base(connectionString, "BlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BlEntities object.
        /// </summary>
        public BlEntities(EntityConnection connection) : base(connection, "BlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<builder> builders
        {
            get
            {
                if ((_builders == null))
                {
                    _builders = base.CreateObjectSet<builder>("builders");
                }
                return _builders;
            }
        }
        private ObjectSet<builder> _builders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<city> cities
        {
            get
            {
                if ((_cities == null))
                {
                    _cities = base.CreateObjectSet<city>("cities");
                }
                return _cities;
            }
        }
        private ObjectSet<city> _cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<community> communities
        {
            get
            {
                if ((_communities == null))
                {
                    _communities = base.CreateObjectSet<community>("communities");
                }
                return _communities;
            }
        }
        private ObjectSet<community> _communities;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the builders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobuilders(builder builder)
        {
            base.AddObject("builders", builder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocities(city city)
        {
            base.AddObject("cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the communities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocommunities(community community)
        {
            base.AddObject("communities", community);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlModel", Name="builder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class builder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new builder object.
        /// </summary>
        /// <param name="builder_id">Initial value of the builder_id property.</param>
        /// <param name="builder_name">Initial value of the builder_name property.</param>
        public static builder Createbuilder(global::System.Guid builder_id, global::System.String builder_name)
        {
            builder builder = new builder();
            builder.builder_id = builder_id;
            builder.builder_name = builder_name;
            return builder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid builder_id
        {
            get
            {
                return _builder_id;
            }
            set
            {
                if (_builder_id != value)
                {
                    Onbuilder_idChanging(value);
                    ReportPropertyChanging("builder_id");
                    _builder_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("builder_id");
                    Onbuilder_idChanged();
                }
            }
        }
        private global::System.Guid _builder_id;
        partial void Onbuilder_idChanging(global::System.Guid value);
        partial void Onbuilder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String builder_name
        {
            get
            {
                return _builder_name;
            }
            set
            {
                Onbuilder_nameChanging(value);
                ReportPropertyChanging("builder_name");
                _builder_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("builder_name");
                Onbuilder_nameChanged();
            }
        }
        private global::System.String _builder_name;
        partial void Onbuilder_nameChanging(global::System.String value);
        partial void Onbuilder_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlModel", "community_builders", "community")]
        public EntityCollection<community> communities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<community>("BlModel.community_builders", "community");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<community>("BlModel.community_builders", "community", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlModel", Name="city")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class city : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new city object.
        /// </summary>
        /// <param name="city_id">Initial value of the city_id property.</param>
        /// <param name="city_name">Initial value of the city_name property.</param>
        public static city Createcity(global::System.Guid city_id, global::System.String city_name)
        {
            city city = new city();
            city.city_id = city_id;
            city.city_name = city_name;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid city_id
        {
            get
            {
                return _city_id;
            }
            set
            {
                if (_city_id != value)
                {
                    Oncity_idChanging(value);
                    ReportPropertyChanging("city_id");
                    _city_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("city_id");
                    Oncity_idChanged();
                }
            }
        }
        private global::System.Guid _city_id;
        partial void Oncity_idChanging(global::System.Guid value);
        partial void Oncity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city_name
        {
            get
            {
                return _city_name;
            }
            set
            {
                Oncity_nameChanging(value);
                ReportPropertyChanging("city_name");
                _city_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("city_name");
                Oncity_nameChanged();
            }
        }
        private global::System.String _city_name;
        partial void Oncity_nameChanging(global::System.String value);
        partial void Oncity_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlModel", "FK_community_TO_city", "community")]
        public EntityCollection<community> communities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<community>("BlModel.FK_community_TO_city", "community");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<community>("BlModel.FK_community_TO_city", "community", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BlModel", Name="community")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class community : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new community object.
        /// </summary>
        /// <param name="community_id">Initial value of the community_id property.</param>
        /// <param name="community_name">Initial value of the community_name property.</param>
        /// <param name="zone">Initial value of the zone property.</param>
        /// <param name="city_id">Initial value of the city_id property.</param>
        public static community Createcommunity(global::System.Guid community_id, global::System.String community_name, global::System.String zone, global::System.Guid city_id)
        {
            community community = new community();
            community.community_id = community_id;
            community.community_name = community_name;
            community.zone = zone;
            community.city_id = city_id;
            return community;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid community_id
        {
            get
            {
                return _community_id;
            }
            set
            {
                if (_community_id != value)
                {
                    Oncommunity_idChanging(value);
                    ReportPropertyChanging("community_id");
                    _community_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("community_id");
                    Oncommunity_idChanged();
                }
            }
        }
        private global::System.Guid _community_id;
        partial void Oncommunity_idChanging(global::System.Guid value);
        partial void Oncommunity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String community_name
        {
            get
            {
                return _community_name;
            }
            set
            {
                Oncommunity_nameChanging(value);
                ReportPropertyChanging("community_name");
                _community_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("community_name");
                Oncommunity_nameChanged();
            }
        }
        private global::System.String _community_name;
        partial void Oncommunity_nameChanging(global::System.String value);
        partial void Oncommunity_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String zone
        {
            get
            {
                return _zone;
            }
            set
            {
                OnzoneChanging(value);
                ReportPropertyChanging("zone");
                _zone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("zone");
                OnzoneChanged();
            }
        }
        private global::System.String _zone;
        partial void OnzoneChanging(global::System.String value);
        partial void OnzoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid city_id
        {
            get
            {
                return _city_id;
            }
            set
            {
                Oncity_idChanging(value);
                ReportPropertyChanging("city_id");
                _city_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("city_id");
                Oncity_idChanged();
            }
        }
        private global::System.Guid _city_id;
        partial void Oncity_idChanging(global::System.Guid value);
        partial void Oncity_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlModel", "FK_community_TO_city", "city")]
        public city city
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("BlModel.FK_community_TO_city", "city").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("BlModel.FK_community_TO_city", "city").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<city> cityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("BlModel.FK_community_TO_city", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<city>("BlModel.FK_community_TO_city", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BlModel", "community_builders", "builder")]
        public EntityCollection<builder> builders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<builder>("BlModel.community_builders", "builder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<builder>("BlModel.community_builders", "builder", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
